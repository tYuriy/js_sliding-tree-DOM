{"version":3,"sources":["scripts/main.js"],"names":["tree","document","querySelector","listOfUl","querySelectorAll","replaceTextWithSpan","list","item","previousSibling","nodeValue","trim","length","parentItem","parentElement","nodeToDeleted","firstChild","listHeader","removeChild","spanElement","createElement","innerText","prepend","addEventListener","e","target","nodeName","nextSibling","hidden"],"mappings":";AAAA,aAqBA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAnBA,IAAMA,EAAOC,SAASC,cAAc,SAC9BC,EAAWF,SAASG,iBAAiB,MAErCC,EAAsB,SAACC,GACRA,IADiB,EACjBA,EAAAA,EAAAA,GADiB,IACX,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAdC,IAAAA,EAAc,EAAA,MACnBA,GAAAA,EAAKC,gBAAgBC,UAAUC,OAAOC,OAAS,EAAG,CAC9CC,IAAAA,EAAaL,EAAKM,cAClBC,EAAgBF,EAAWG,WAC3BC,EAAaJ,EAAWK,YAAYH,GAAeL,UACnDS,EAAcjB,SAASkB,cAAc,QAE3CD,EAAYE,UAAYJ,EACxBJ,EAAWS,QAAQH,KATa,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,MActCb,EAAoBF,GAEpBH,EAAKsB,iBAAiB,QAAS,SAAAC,GACH,SAAtBA,EAAEC,OAAOC,WACXF,EAAEC,OAAOE,YAAYC,QAAUJ,EAAEC,OAAOE,YAAYC","file":"main.eb85a1f5.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst tree = document.querySelector('.tree');\nconst listOfUl = document.querySelectorAll('ul');\n\nconst replaceTextWithSpan = (list) => {\n  for (const item of list) {\n    if (item.previousSibling.nodeValue.trim().length > 0) {\n      const parentItem = item.parentElement;\n      const nodeToDeleted = parentItem.firstChild;\n      const listHeader = parentItem.removeChild(nodeToDeleted).nodeValue;\n      const spanElement = document.createElement('span');\n\n      spanElement.innerText = listHeader;\n      parentItem.prepend(spanElement);\n    }\n  }\n};\n\nreplaceTextWithSpan(listOfUl);\n\ntree.addEventListener('click', e => {\n  if (e.target.nodeName === 'SPAN') {\n    e.target.nextSibling.hidden = !e.target.nextSibling.hidden;\n  }\n});\n"]}